<?php

/*
* This file is part of the Ikimea Pages package.
*
* (c) Ikimea <http://www.ikimea.com/>
*
* For the full copyright and license information, please view the LICENSE
* file that was distributed with this source code.
*/

namespace Ikimea\PageBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * AreaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AreaRepository extends EntityRepository
{
    /**
     * @param $name
     * @param $culture
     * @param $slug
     * @return \Doctrine\ORM\Query
     */
    public function getAreaBaseQuery($name, $parent)
    {
         $results =  $this->createQueryBuilder('z')
            ->select('z, c')
            ->leftJoin('z.components', 'c', 'c.area_id = z.id')
            ->leftJoin('z.page', 'p')
            ->where('z.name = :name')
            ->Andwhere('p.id = :slug')
            ->setParameter('name',$name)
            ->setParameter('slug',$parent)
            ->setMaxResults(1)
            ->getQuery();
         return $results->getOneOrNullResult();
    }

    /**
     * Check area is exist
     * @param $name
     * @param $culture
     * @param $slug
     */
    public function areaExist($name, $slug)
    {
        return (count($this->getAreaBaseQuery($name, $slug)) == 0) ? false: true;
    }

    public function getArea($name, $slug)
    {
       return $this->getAreaBaseQuery($name, $slug);
    }
}